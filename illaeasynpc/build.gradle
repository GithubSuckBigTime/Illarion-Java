/*
 * This file is part of the Illarion Client.
 *
 * Copyright Â© 2013 - Illarion e.V.
 *
 * The Illarion Client is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Illarion Client is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Illarion Client.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply plugin: 'idea'

archivesBaseName = 'illarion_easynpc'
mainClassName = 'illarion.easynpc.gui.MainFrame'

project.extensions.antlr = [
        grammarpackage: "illarion.easynpc.grammar",
        antlrSource: 'src/main/antlr4',
        destinationDir: "src/generated/java"
]

idea {
    module {
        sourceDirs += file(antlr.destinationDir)
    }
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile project(':common')
    compile group: 'org.javolution', name: 'javolution-core-java', version: '6.0.0'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '2.0.3'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.5'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.5'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.5'
    compile group: 'org.codehaus.janino', name: 'janino', version: '2.6.1'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'org.bushe', name: 'eventbus', version: '1.4'
    compile group: 'com.github.insubstantial', name: 'substance', version: '7.2.1'
    compile group: 'com.github.insubstantial', name: 'substance-flamingo', version: '7.2.1'
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.5.0'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.1'

    antlr4 group: "org.antlr", name: "antlr4", version: "4.1"

    runtime group: 'org.illarion', name: 'rsc_tables', version: '2.1.13-SNAPSHOT'
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

jar {
    dependsOn { gitVersion }
    manifest {
        attributes       \
              'Main-Class': 'illarion.easynpc.gui.MainFrame',      \
              'Permissions': 'all-permissions',      \
              'Codebase': 'illarion.org',      \
              'Application-Name': 'Illarion easyNPC editor',      \
              'Application-Library-Allowable-Codebase': 'illarion.org',      \
              'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ssZ'),      \
              'Built-By': System.getProperty('user.name'),       \
              'Built-JDK': System.getProperty('java.version'),       \
              'Implementation-Title': 'Illarion easyNPC Editor',       \
              'Implementation-Vendor': 'Illarion e.V.',      \
              'Implementation-Version': project.ext.fullVersion
    }
}

clean {
    delete antlr.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            url project.ext.mavenRepo
        }
    }
}