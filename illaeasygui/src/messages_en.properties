###
## This file is part of the Illarion easyGUI Editor.
##
## Copyright © 2011 - Illarion e.V.
##
## The Illarion easyGUI Editor is free software: you can redistribute i and/or
## modify it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or (at your
## option) any later version.
##
## The Illarion easyGUI Editor is distributed in the hope that it will be
## useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
## Public License for more details.
##
## You should have received a copy of the GNU General Public License along with
## the Illarion easyGUI Editor. If not, see <http://www.gnu.org/licenses/>.
###
## English Version of the localized easyGUI parser and editor texts

## GUI Texts
illarion.easygui.gui.ClipboardBand.title=Clipboard
illarion.easygui.gui.ClipboardBand.pasteButton=Paste
illarion.easygui.gui.ClipboardBand.copyButton=Copy
illarion.easygui.gui.ClipboardBand.cutButton=Cut
illarion.easygui.gui.ClipboardBand.pasteButtonTooltipTitle=Paste text
illarion.easygui.gui.ClipboardBand.pasteButtonTooltip=Paste text from the clipboard. The text will be added at the current cursor position of the current visible script.
illarion.easygui.gui.ClipboardBand.copyButtonTooltipTitle=Copy text
illarion.easygui.gui.ClipboardBand.copyButtonTooltip=Copy the currently selected text in the editor to the clipboard.
illarion.easygui.gui.ClipboardBand.cutButtonTooltipTitle=Cut text
illarion.easygui.gui.ClipboardBand.cutButtonTooltip=Copy the currently selected text in the editor to the clipboard and remove it from the editor.

illarion.easygui.gui.CompileBand.title=Parser
illarion.easygui.gui.CompileBand.checkScript=Check Script
illarion.easygui.gui.CompileBand.rebuildScript=Rebuild Script
illarion.easygui.gui.CompileBand.autoCheck=Auto build
illarion.easygui.gui.CompileBand.checkScriptButtonTooltipTitle=Check script
illarion.easygui.gui.CompileBand.checkScriptButtonTooltip=Check the easyGUI script for any errors. In case any errors are found they are displayed in the lower area of the editor. The script won't be changed in any why when its checked for errors.
illarion.easygui.gui.CompileBand.parseScriptButtonTooltipTitle=Parse script
illarion.easygui.gui.CompileBand.parseScriptButtonTooltip=Parsing the script will first result in a check for errors on the script. In case no errors are found the script is written again by the parser, following the design guidelines for the easyGUI language.
illarion.easygui.gui.CompileBand.autoCheckButtonTooltipTitle=Autocheck script
illarion.easygui.gui.CompileBand.autoCheckButtonTooltip=When activated the script is checked when you change the script and stopped typing. The check performed is identical with the check the "Check script" button causes.

illarion.easygui.gui.ErrorPane.errors=%1$s errors
illarion.easygui.gui.ErrorPane$ErrorPaneTableModel.description=Description
illarion.easygui.gui.ErrorPane$ErrorPaneTableModel.file=File
illarion.easygui.gui.ErrorPane$ErrorPaneTableModel.location=Location

illarion.easygui.gui.MainFrame.UnsavedChanges.title=Unsaved changes
illarion.easygui.gui.MainFrame.UnsavedChanges.message=There are unsaved changes. What do you want to do?
illarion.easygui.gui.MainFrame.UnsavedChanges.message2=The file "%1$s" contains unsaved changes. What do you want to do?
illarion.easygui.gui.MainFrame.UnsavedChanges.saveButton=Save changes
illarion.easygui.gui.MainFrame.UnsavedChanges.discardButton=Discard changes
illarion.easygui.gui.MainFrame.UnsavedChanges.cancelButton=Cancel

illarion.easygui.gui.MainFrame.ribbonTaskStart=Start
illarion.easygui.gui.MainFrame.errorTab=Errors
illarion.easygui.gui.MainFrame.newScriptTab=New script
illarion.easygui.gui.MainFrame.saveButtonTooltipTitle=Save the currently visible script
illarion.easygui.gui.MainFrame.saveButtonTooltip=Save the script that is currently visible to the file system. In case its a new script you will be asked where to save it. In case the saving location of this script is known it will be stored without questions.

illarion.easygui.gui.MainMenu.newScriptButton=New Script
illarion.easygui.gui.MainMenu.openScriptButton=Open Script
illarion.easygui.gui.MainMenu.oldFilesHead=Files opened before
illarion.easygui.gui.MainMenu.saveScriptButton=Save Script
illarion.easygui.gui.MainMenu.saveAllScriptButton=Save all Scripts
illarion.easygui.gui.MainMenu.saveAsScriptButton=Save Script as...
illarion.easygui.gui.MainMenu.saveLuaScriptButton=Save Lua Script
illarion.easygui.gui.MainMenu.uploadLuaScriptButton=Upload Lua Script
illarion.easygui.gui.MainMenu.settingsButton=Settings
illarion.easygui.gui.MainMenu.exitButton=Exit

illarion.easygui.gui.config.generalTab=General
illarion.easygui.gui.config.easyGUIFolderLabel=easyGUI Script directory
illarion.easygui.gui.config.luaFolderLabel=LUA Script directory
illarion.easygui.gui.config.maxUndoLabel=Maximal amount of undo operations
illarion.easygui.gui.config.lookAndFeelTab=Look & Feel
illarion.easygui.gui.config.useWindowDecoLabel=Use window decoration
illarion.easygui.gui.config.usedThemeLabel=Used theme
illarion.easygui.gui.config.useSyntaxLabel=Use syntax highlighting
illarion.easygui.gui.config.errorReport=Error reports
illarion.easygui.gui.config.errorAsk=Ask
illarion.easygui.gui.config.errorAlways=Send always
illarion.easygui.gui.config.errorNever=Send never

illarion.common.config.gui.Title=Options
illarion.common.config.gui.Save=Save
illarion.common.config.gui.Cancel=Cancel
illarion.common.config.gui.directory.Title=Choose directory
illarion.common.config.gui.directory.Browse=Browse
illarion.common.config.gui.file.Title=Choose file
illarion.common.config.gui.file.Browse=Browse

illarion.easygui.gui.SearchBand.title=Search
illarion.easygui.gui.SearchBand.fastSearchGroup=Quick search
illarion.easygui.gui.SearchBand.advancedSearchButton=Advanced search
illarion.easygui.gui.SearchBand.fastSearchTooltipTitle=Quick search
illarion.easygui.gui.SearchBand.fastSearchTooltip=Quickly searching a character sequence in the currently active script. Just enter the sequence here and press enter to initiate the search.
illarion.easygui.gui.SearchBand.findButtonTooltipTitle=Advanced search
illarion.easygui.gui.SearchBand.findButtonTooltip=Display the advanced search dialog that offers more options to search or replace text in the open script then the quick search feature.

illarion.easygui.gui.SearchDialog.title=Search
illarion.easygui.gui.SearchDialog.searchForLabel=Search for
illarion.easygui.gui.SearchDialog.replaceWithLabel=Replace with
illarion.easygui.gui.SearchDialog.caseCheck=Case sensitive
illarion.easygui.gui.SearchDialog.regExpCheck=Regular expressions
illarion.easygui.gui.SearchDialog.findNextButton=Find next
illarion.easygui.gui.SearchDialog.replaceButton=Replace
illarion.easygui.gui.SearchDialog.replaceAllButton=Replace all
illarion.easygui.gui.SearchDialog.closeButton=Close

illarion.easygui.gui.Utils.saveLuaErrors=Error while parsing the script
illarion.easygui.gui.Utils.saveLuaErrors=There are errors in this easyGUI script.\nScripts with errors can't be saved as LUA script.\nCheck the error view on the main screen for further details.
illarion.easygui.gui.Utils.luaScriptsFileType=Lua scripts (*.lua)
illarion.easygui.gui.Utils.easyGUIScriptsFileType=EasyNPC scripts (*.npc)
illarion.easygui.gui.Utils.uploadLuaErrors=Error while parsing the script
illarion.easygui.gui.Utils.uploadLuaErrorsTitle=There are errors in this easyGUI script.\nScripts with errors can't be converted and uploaded.\nCheck the error view on the main screen for further details.
illarion.easygui.gui.Utils.luaUploadInfosTitle=LUA upload done
illarion.easygui.gui.Utils.luaUploadInfos=The NPC script was load to the server.\nYou may login now to the server and test your NPC once the script was reloaded using the command !fr\n\nNote that the script was load to a NPC that is setup for testing purposes.\nNeither the name of the NPC nor the location, race and gender will fit.

illarion.easygui.gui.UndoMonitor.undoButtonTooltipTitle=Undo
illarion.easygui.gui.UndoMonitor.undoButtonTooltip=Undo the last edit to the currently visible script.
illarion.easygui.gui.UndoMonitor.redoButtonTooltipTitle=Redo
illarion.easygui.gui.UndoMonitor.redoButtonTooltip=Redo the last undone edit to the currently visible script.

illarion.easygui.gui.MainMenu.newScriptEntry=Open a new empty script file.

illarion.easygui.gui.DocuBrowser.title=Documentation
illarion.easygui.gui.DocuBrowser.description=Description
illarion.easygui.gui.DocuBrowser.syntax=Syntax
illarion.easygui.gui.DocuBrowser.example=Example

## Parser error messages
illarion.easygui.parser.NpcBasics.sex=While this looks like a gender definition it was impossible to get a valid name for the gender. Valid values are:
illarion.easygui.parser.NpcBasics.direction=While this looks like a direction definition it was impossible to get a valid name for the direction. Valid values are:
illarion.easygui.parser.NpcBasics.race=While this looks like a race definition it was impossible to get a valid name for the race. Valid values are:
illarion.easygui.parser.NpcBasics.affiliation=While this looks like a affiliation definition it was impossible to get a valid name for the affiliation. Valid values are:
illarion.easygui.parser.NpcBasics.language=While this looks like a language definition it was impossible to get a valid name for the language. Valid values are:
illarion.easygui.parser.NpcBasics.defaultLang=While this looks like a default language definition it was impossible to get a valid name for the language. Valid values are:
illarion.easygui.parser.NpcBasics.autoIntro=While this looks like a auto introduction definition it was impossible to get a valid name for the flag. Valid values are:
illarion.easygui.parser.NpcBasics.lookat=This "lookat" message contains a invalid, unescaped " sign.
illarion.easygui.parser.NpcBasics.use=This "use" message contains a invalid, unescaped " sign.
illarion.easygui.parser.NpcBasics.confused=This "confused" message contains a invalid, unescaped " sign.
illarion.easygui.parser.NpcBasics.generalFailure=The NPC basics parser fetched a line and failed to parse it for unknown reason. This is likely a parser bug.

illarion.easygui.parser.NpcTalk.generalFailure=The NPC talking parser fetched a line and failed to parse it for unknown reasons. This is likely a parser bug.

illarion.easygui.parser.talk.TalkingLine.remainConditions=Remaining talking conditions:
illarion.easygui.parser.talk.TalkingLine.remainConsequences=Remaining talking consequences:

illarion.easygui.parser.NpcColors.red=The red share of the color is outside the allowed range. The range starts at 0 and ends at 255.
illarion.easygui.parser.NpcColors.green=The green share of the color is outside the allowed range. The range starts at 0 and ends at 255.
illarion.easygui.parser.NpcColors.blue=The blue share of the color is outside the allowed range. The range starts at 0 and ends at 255.

illarion.easygui.parser.NpcEquipment.item=It was impossible to fetch a fitting item for this equipment slot.
illarion.easygui.parser.NpcEquipment.general=The equipment parser fetched a line but can't parse it. This is likely a parser error.

illarion.easygui.parser.talk.conditions.Attribute.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Attribute.attribute=Failed to identify attribute %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Attribute.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Chance.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Item.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Item.item=No item with the ID %1$s exists in %2$s.
illarion.easygui.parser.talk.conditions.Item.itemPos=Unable to get item position %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Item.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Language.lang=Unable to determine player language %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Money.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Money.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Money.illegalOperator=Got illegal money operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Number.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Queststatus.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Queststatus.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Race.race=Failed to identify race %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Sex.sex=Failed to identify gender %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Skill.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.Skill.skill=Failed to identify skill name %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Skill.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.State.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.conditions.State.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Talkstate.state=Failed to identify talking state %1$s in %2$s.
illarion.easygui.parser.talk.conditions.Town.town=Failed to identify town %1$s in %2$s.

illarion.easygui.parser.talk.consequences.Attribute.attribute=Failed to identify attribute %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Attribute.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Attribute.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.DeleteItem.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.DeleteItem.item=No item with the ID %1$s exists in %2$s.
illarion.easygui.parser.talk.consequences.Item.item=No item with the ID %1$s exists in %2$s.
illarion.easygui.parser.talk.consequences.Item.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Money.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Money.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Queststatus.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Queststatus.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Rankpoints.group=Failed to identify group name %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Rankpoints.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Rankpoints.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Rune.magictype=Failed to identify magictype %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Rune.number=Rune number %1$s is outside the valid range in %2$s. Valid range is 1 to 31.
illarion.easygui.parser.talk.consequences.Skill.name=Failed to identify skill name %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Skill.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Skill.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.State.number=Failed to extract number value %1$s from %2$s.
illarion.easygui.parser.talk.consequences.State.operator=Failed to identify operator %1$s in %2$s.
illarion.easygui.parser.talk.consequences.Talkstate.mode=Failed to extract mode %1$s from %2$s.
illarion.easygui.parser.talk.consequences.Treasure.number=Failed to extract number value %1$s from %2$s.

## Parser Documentation
illarion.easygui.Parser.Docu.title=EasyNPC Parser
illarion.easygui.Parser.Docu.description=The easyGUI Parser is able to read easyGUI scripts, checks them for errors or translates them into LUA scripts.

illarion.easygui.parser.NpcBasics.Docu.title=EasyNPC basic header
illarion.easygui.parser.NpcBasics.Docu.description=The basic header of the header is for the most parts something that needs to be part of every single NPC. See the members of this entry for detailed informations on every header entry.

illarion.easygui.parser.NpcBasics.Docu.Name.title=NPC Name
illarion.easygui.parser.NpcBasics.Docu.Name.description=This header entry defines the name of the NPC. Every NPC needs one name. The name should fit into the roleplay environment just like the character names. There must be only one name definition in each NPC.
illarion.easygui.parser.NpcBasics.Docu.Name.example=name="Eliza"\nname="Dorothy Applesong"\nname="Geven Durius"
illarion.easygui.parser.NpcBasics.Docu.Name.syntax=name="<name of the NPC>"

illarion.easygui.parser.NpcBasics.Docu.Sex.title=NPC Gender
illarion.easygui.parser.NpcBasics.Docu.Sex.description=This definition defines the gender of the NPC. Every NPC needs one of these entries.
illarion.easygui.parser.NpcBasics.Docu.Sex.example=sex=male\nsex=female
illarion.easygui.parser.NpcBasics.Docu.Sex.syntax=sex=<gender constant>

illarion.easygui.parser.NpcBasics.Docu.Race.title=NPC Race
illarion.easygui.parser.NpcBasics.Docu.Race.description=This definition defines the race of the NPC. Every NPC needs one of these entries.
illarion.easygui.parser.NpcBasics.Docu.Race.example=race=human\nrace=dwarf\nrace=halfling\nrace=elf\nrace=orc\nrace=lizard
illarion.easygui.parser.NpcBasics.Docu.Race.syntax=race=<race constant>

illarion.easygui.parser.NpcBasics.Docu.Position.title=NPC Position
illarion.easygui.parser.NpcBasics.Docu.Position.description=This definition defines the position of the NPC. Every NPC needs one of these entries.
illarion.easygui.parser.NpcBasics.Docu.Position.example=position=12, 343, 0\nposition=123, -321, -3
illarion.easygui.parser.NpcBasics.Docu.Position.syntax=position=<x>, <y>, <z>

illarion.easygui.parser.NpcBasics.Docu.Direction.title=NPC Direction
illarion.easygui.parser.NpcBasics.Docu.Direction.description=This definition defines the direction the NPC is looking at. Every NPC needs one of this entries.
illarion.easygui.parser.NpcBasics.Docu.Direction.example=direction=north\ndirection=northeast\ndirection=east\ndirection=southeast\ndirection=sourch\ndirection=southwest\ndirection=west\ndirection=northwest
illarion.easygui.parser.NpcBasics.Docu.Direction.syntax=direction=<direction constant>

illarion.easygui.parser.NpcBasics.Docu.Author.title=NPC Author
illarion.easygui.parser.NpcBasics.Docu.Author.description=This entry is optional and used for documentation. Everyone who worked on this NPC should write such a entry with his name to create a proper list of those who edited this NPC.
illarion.easygui.parser.NpcBasics.Docu.Author.example=author="Faladron"\nauthor="Estralis Seborian"\nauthor="Nitram"
illarion.easygui.parser.NpcBasics.Docu.Author.syntax=direction="<your name>"

illarion.easygui.parser.NpcBasics.Docu.Job.title=NPC Job
illarion.easygui.parser.NpcBasics.Docu.Job.description=This entry is optional and used for documentation. It can be used to get a raw overview about the job of this NPC.
illarion.easygui.parser.NpcBasics.Docu.Job.example=job="smith"\njob="tailor"\njob="hitman"
illarion.easygui.parser.NpcBasics.Docu.Job.syntax=job="<job name>"

illarion.easygui.parser.NpcBasics.Docu.Affiliation.title=NPC Affiliation
illarion.easygui.parser.NpcBasics.Docu.Affiliation.description=This entry is optional and used for documentation. It can be used to name the (political) group this NPC belongs to.
illarion.easygui.parser.NpcBasics.Docu.Affiliation.example=affiliation="none"\naffiliation="free"\naffiliation="Cadoymr"
illarion.easygui.parser.NpcBasics.Docu.Affiliation.syntax=affiliation="<group name>"

illarion.easygui.parser.NpcBasics.Docu.Language.title=NPC Languages
illarion.easygui.parser.NpcBasics.Docu.Language.description=This entry defines one language the NPC is able to speak. The default value is the NPC to speak "common language" and the language fitting its race. Its possible to set this entry more then once to define that the NPC talks more then one language.
illarion.easygui.parser.NpcBasics.Docu.Language.example=language=common\nlanguage=ancient\nlanguage=dwarf\nlanguage=elf
illarion.easygui.parser.NpcBasics.Docu.Language.syntax=language=<language identifier>

illarion.easygui.parser.NpcBasics.Docu.DefaultLang.title=NPC Default Language
illarion.easygui.parser.NpcBasics.Docu.DefaultLang.description=This entry defines the language the NPC is speaking by default. This value should be set only once. The default value is "common language".
illarion.easygui.parser.NpcBasics.Docu.DefaultLang.example=defaultLanguage=common\ndefaultLanguage=ancient\ndefaultLanguage=dwarf\ndefaultLanguage=elf
illarion.easygui.parser.NpcBasics.Docu.DefaultLang.syntax=defaultLanguage=<language identifier>

illarion.easygui.parser.NpcBasics.Docu.Lookat.title=NPC Lookat message
illarion.easygui.parser.NpcBasics.Docu.Lookat.description=This commands define the message that is displayed when the player performs a lookat on the NPC.
illarion.easygui.parser.NpcBasics.Docu.Lookat.example=lookatDE="Ein NPC der toll aussieht."\nlookatUS="A NPC who is looking good."
illarion.easygui.parser.NpcBasics.Docu.Lookat.syntax=lookatDE="<lookat message in German>"\nlookatUS="<lookat message in English>"

illarion.easygui.parser.NpcBasics.Docu.Use.title=NPC Use message
illarion.easygui.parser.NpcBasics.Docu.Use.description=This commands define the message that is displayed when the player uses the NPC.
illarion.easygui.parser.NpcBasics.Docu.Use.example=useMsgDE="Fass mich nicht an!"\nuseMsgUS="Stop touching meee!"
illarion.easygui.parser.NpcBasics.Docu.Use.syntax=useMsgDE="<use message in German>"\nuseMsgUS="<useDE message in English>"

illarion.easygui.parser.NpcBasics.Docu.Confused.title=NPC Confused message
illarion.easygui.parser.NpcBasics.Docu.Confused.description=This commands define the message that is displayed when the player talks near the NPC in a language it does not understand.
illarion.easygui.parser.NpcBasics.Docu.Confused.example=wrongLangDE="#me blickt dich verwirrt an."\nwrongLangUS="#me looks at you confused."
illarion.easygui.parser.NpcBasics.Docu.Confused.syntax=wrongLangDE="<confused message in German>"\nwrongLangUS="<confused message in English>"

illarion.easygui.parser.NpcBasics.Docu.AutoIntro.title=NPC auto introduce state
illarion.easygui.parser.NpcBasics.Docu.AutoIntro.description=This flag controls if the NPC introduces automatically to the player or not. Default value is "on", means the NPC introduces on himself to the player.
illarion.easygui.parser.NpcBasics.Docu.AutoIntro.example=autointroduce=on\nautointroduce=off
illarion.easygui.parser.NpcBasics.Docu.AutoIntro.syntax=autointroduce=<on/off>

illarion.easygui.parser.NpcComment.Docu.title=Comment
illarion.easygui.parser.NpcComment.Docu.description=A comment is a line that has no direct effect on the script. It can be used to give addition informations about the script or to group the talking triggers.
illarion.easygui.parser.NpcComment.Docu.example=--This is a comment\n--Hello world\n--I have no effect
illarion.easygui.parser.NpcComment.Docu.syntax=--<Text>

illarion.easygui.parser.NpcCycleText.Docu.title=NPC Cycle Text
illarion.easygui.parser.NpcCycleText.Docu.description=A cycle text is a text the NPC says on a regular random base without any trigger and without conditions. A good NPC should contain at least 10 of those. But there is no problem in defining more.
illarion.easygui.parser.NpcCycleText.Docu.example=cycletext "#me gähnt", "#me yawns"\ncycletext "#me sieht sich um", "#me look around"\ncycletext "Arr!", "Arr!"
illarion.easygui.parser.NpcCycleText.Docu.syntax=cycletext "<German text>", "<English text>"

illarion.easygui.parser.NpcWalk.Docu.title=NPC walking radius
illarion.easygui.parser.NpcWalk.Docu.description=This command adds a walking radius to the NPC. It will start to walk around randomly within the radius around its default location.
illarion.easygui.parser.NpcWalk.Docu.example=radius=5\nradius=10\nradius=40
illarion.easygui.parser.NpcWalk.Docu.syntax=radius=<radius in tiles>

illarion.easygui.parser.NpcEmpty.Docu.title=Empty lines
illarion.easygui.parser.NpcEmpty.Docu.description=You can place empty lines in the script as you shall fit. How ever those lines are not considered by the parser and while parsing the script they are removed. There are a few empty line, for example in front of every comment block, that are placed automatically py the parser.

illarion.easygui.parser.NpcTalk.Docu.title=NPC talking
illarion.easygui.parser.NpcTalk.Docu.description=This command is the base for all NPC talking lines. It separates the conditions and the consequences of each talking line. The conditions and consequences determine the way each talking line works. The example listed here is a minimal example that causes a single trigger condition to cause the NPC to say a answer.
illarion.easygui.parser.NpcTalk.Docu.example="Hello" -> "Greetings, how are you doing?"
illarion.easygui.parser.NpcTalk.Docu.syntax=<conditions> -> <consequences>

illarion.easygui.parser.talk.TalkingLine.Conditions.Docu.title=NPC talking conditions
illarion.easygui.parser.talk.TalkingLine.Conditions.Docu.description=The talking conditions are the group of entries that can be written in the first part of a talking line.

illarion.easygui.parser.talk.TalkingLine.Consequence.Docu.title=NPC talking consequences
illarion.easygui.parser.talk.TalkingLine.Consequence.Docu.description=The talking consequences are the group of entries that can be written in the second part of the talking line.

illarion.easygui.parser.talk.conditions.Admin.Docu.title=Admin
illarion.easygui.parser.talk.conditions.Admin.Docu.description=This condition checks if the player who is talking to the NPC is a administrator, so if he has any GM rights.
illarion.easygui.parser.talk.conditions.Admin.Docu.example="Hello",admin -> "Greetings Gamemaster!"
illarion.easygui.parser.talk.conditions.Admin.Docu.syntax=admin

illarion.easygui.parser.talk.conditions.Attribute.Docu.title=Attribute
illarion.easygui.parser.talk.conditions.Attribute.Docu.description=This condition checks a attribute of the character. Attributes are in addition to the normal attributes agility, constitution, dexterity, essence, intelligence, perception, strength and willpower also the value foodlevel, hitpoints and manapoints.
illarion.easygui.parser.talk.conditions.Attribute.Docu.example="Hello", attrib(agility)>5 -> "Hello, fast one!"\n"Hello", attrib(hitpoints)<=5000 -> "Hello, hurt one!"\n"Hello", attrib(intelligence)<18 -> "Hello unintelligent person!"
illarion.easygui.parser.talk.conditions.Attribute.Docu.syntax=attrib(<attribute identifier>) <compare operator> <value>

illarion.easygui.parser.talk.conditions.Chance.Docu.title=Chance
illarion.easygui.parser.talk.conditions.Chance.Docu.description=This condition does a random value check. It true in <value>% of the cases.
illarion.easygui.parser.talk.conditions.Chance.Docu.example="Hello", chance(5) -> "Hello, lucky one"
illarion.easygui.parser.talk.conditions.Chance.Docu.syntax=chance(<value>)

illarion.easygui.parser.talk.conditions.Item.Docu.title=Item
illarion.easygui.parser.talk.conditions.Item.Docu.description=This condition checks if the character has a specified amount of items or not. The item position that is written there also can be "body", means the item is only searched in the inventory of the character. "belt" means the item has to be in one of the 6 belt slots. "bag" means the item has to be in the bag the character has. "all" means the item can be anywhere. In additon its optional possible to limit the search to items that have a specified data value.
illarion.easygui.parser.talk.conditions.Item.Docu.example="Hello", item(1, body) > 1 -> "Hello, I see you have at least one Serinjahsword with you."\n"Hello", item(1, body, 1) > 1 -> "Hello, I see you have at least one Serinjahsword with data value 1 with you."
illarion.easygui.parser.talk.conditions.Item.Docu.syntax=item(<item id>, <item position>) <compare operator> <value>\nitem(<item id>, <item position>, <data value>) <compare operator> <value>

illarion.easygui.parser.talk.conditions.Language.Docu.title=Language
illarion.easygui.parser.talk.conditions.Language.Docu.description=This condition checks the language the player of the character is using. German and English are the possible values.
illarion.easygui.parser.talk.conditions.Language.Docu.example="Hi", german -> "Grüße"\n"Hi", english -> "Greetings"
illarion.easygui.parser.talk.conditions.Language.Docu.syntax=<language constant>

illarion.easygui.parser.talk.conditions.Money.Docu.title=Money
illarion.easygui.parser.talk.conditions.Money.Docu.description=This condition checks if the character has or has not a specified amount of money.
illarion.easygui.parser.talk.conditions.Money.Docu.example="Hi", money > 1000 -> "Oh you have more then one silvercoin with you."
illarion.easygui.parser.talk.conditions.Money.Docu.syntax=money <compare operator> <value>

illarion.easygui.parser.talk.conditions.Number.Docu.title=Said number
illarion.easygui.parser.talk.conditions.Number.Docu.description=This condition checks the number the character has spoken in the last line. This conditions requires the keyword %NUMBER in the trigger text.
illarion.easygui.parser.talk.conditions.Number.Docu.example="I want %NUMBER cookies", %NUMBER > 5 -> "I don't have more then 5 cookies"
illarion.easygui.parser.talk.conditions.Number.Docu.syntax=%NUMBER <compare operator> <value>

illarion.easygui.parser.talk.conditions.Queststatus.Docu.title=Queststatus
illarion.easygui.parser.talk.conditions.Queststatus.Docu.description=This condition checks a queststatus value of the character who is talking with the NPC.
illarion.easygui.parser.talk.conditions.Queststatus.Docu.example="Hello", queststatus(5) > 1 -> "Okay you did the quest already! Hello!"
illarion.easygui.parser.talk.conditions.Queststatus.Docu.syntax=queststatus(<quest id>) <compare operator> <value>

illarion.easygui.parser.talk.conditions.Race.Docu.title=Race
illarion.easygui.parser.talk.conditions.Race.Docu.description=This condition checks the race of the character who is talking with the NPC. The possible values are human, dwarf, halfling, elf, orc and lizardman
illarion.easygui.parser.talk.conditions.Race.Docu.example="Hello", race=human -> "Hello human."
illarion.easygui.parser.talk.conditions.Race.Docu.syntax=race=<race constant>

illarion.easygui.parser.talk.conditions.Sex.Docu.title=Gender
illarion.easygui.parser.talk.conditions.Sex.Docu.description=This condition checks the gender of the character who is talking with the NPC. The possible values are male and female.
illarion.easygui.parser.talk.conditions.Sex.Docu.example="Hello", sex=female -> "Hello m'lady."
illarion.easygui.parser.talk.conditions.Sex.Docu.syntax=sex=<gender constant>

illarion.easygui.parser.talk.conditions.Skill.Docu.title=Skill
illarion.easygui.parser.talk.conditions.Skill.Docu.description=This condition checks a skill of the character who is talking to the NPC.
illarion.easygui.parser.talk.conditions.Skill.Docu.example="Hello", skill(smithing) > 70 -> "Greetings smith!"
illarion.easygui.parser.talk.conditions.Skill.Docu.syntax=skill(<skill name>) <compare operator> <value>

illarion.easygui.parser.talk.conditions.State.Docu.title=NPC state
illarion.easygui.parser.talk.conditions.State.Docu.description=This condition checks the state of the NPC. Each NPC has one of those state values per character, that can be used to coordinate the current state of the talk. The default value for the state is 0.
illarion.easygui.parser.talk.conditions.State.Docu.example="Hello", state=1 -> "Hello again"
illarion.easygui.parser.talk.conditions.State.Docu.syntax=state <compare operator> <value>

illarion.easygui.parser.talk.conditions.Talkstate.Docu.title=Talking state
illarion.easygui.parser.talk.conditions.Talkstate.Docu.description=This condition is able to check the talking state. The valid values are "idle" in case the NPC is currently not talking to a specified character or he is talking to the character currently talking to the NPC. And "busy" in case the NPC is talking to another character.
illarion.easygui.parser.talk.conditions.Talkstate.Docu.example="Hello", busy -> "Sorry I'm talking to someone else, go away!"
illarion.easygui.parser.talk.conditions.Talkstate.Docu.syntax=<talking state constant>

illarion.easygui.parser.talk.conditions.Town.Docu.title=Town
illarion.easygui.parser.talk.conditions.Town.Docu.description=This condition is able to check the relation of the character to a town. 
illarion.easygui.parser.talk.conditions.Town.Docu.example="Hello", town=none -> "Oh I see you do not belong to any town!"
illarion.easygui.parser.talk.conditions.Town.Docu.syntax=town=<town constant>

illarion.easygui.parser.talk.conditions.Trigger.Docu.title=Trigger
illarion.easygui.parser.talk.conditions.Trigger.Docu.description=The trigger is the text the character has to say in order to fit the condition. The trigger does not have to fit the entire line the character is saying. If the trigger is found in the line, the condition is true. Its possible in addition to use regular expression in the triggers in case very complex and specified triggers are required. In case more then one trigger is set in one talking line, only one has to fit.
illarion.easygui.parser.talk.conditions.Trigger.Docu.example="Hello" -> "Greetings"
illarion.easygui.parser.talk.conditions.Trigger.Docu.syntax="<trigger text>"

illarion.easygui.parser.talk.consequences.Answer.Docu.title=Answer
illarion.easygui.parser.talk.consequences.Answer.Docu.description=The answer consequence contains the text said by the NPC as response on a trigger. In case more then one answer is set in the consequence list, one is chosen randomly.
illarion.easygui.parser.talk.consequences.Answer.Docu.example="Hello" -> "Greetings"
illarion.easygui.parser.talk.consequences.Answer.Docu.syntax="<answer text>"

illarion.easygui.parser.talk.consequences.Attribute.Docu.title=Attribute
illarion.easygui.parser.talk.consequences.Attribute.Docu.description=This consequence is used to change a attribute of the character. Chances to the main attributes strength, constitution, agility, perception, dexterity, willpower, intelligence and essence are only temporary and have no effect after the next login of the player anymore. Changes to the hitpoint, manapoints and foodlevel are permanent.
illarion.easygui.parser.talk.consequences.Attribute.Docu.example="Hello" -> "Hello, I make you stronger now!", attrib(strength) + 5
illarion.easygui.parser.talk.consequences.Attribute.Docu.syntax=attrib(<attrib constant>) <calculation operator> <value>

illarion.easygui.parser.talk.consequences.DeleteItem.Docu.title=Delete Item
illarion.easygui.parser.talk.consequences.DeleteItem.Docu.description=This consequence deletes items from the player inventory. The optional data value sets the data value the items deleted need to have. In case the value is not set the items are deleted regardless of the data value.
illarion.easygui.parser.talk.consequences.DeleteItem.Docu.example="Hello" -> "Hello, I just stole two Serinjahswords from you!", deleteitem(1,2)\n"Hello" -> "Hello, I just stole two Serinjahswords with data 5 from you!", deleteitem(1, 2, 5)
illarion.easygui.parser.talk.consequences.DeleteItem.Docu.syntax=deleteitem(<item id>, <amount>)\ndeleteitem(<item id>, <amount>, <data>)

illarion.easygui.parser.talk.consequences.Inform.Docu.title=Inform
illarion.easygui.parser.talk.consequences.Inform.Docu.description=This consequence sends a private inform message to the character who is talking to the NPC.
illarion.easygui.parser.talk.consequences.Inform.Docu.example="Hello" -> "Greetings", inform("You just spoke with a NPC!")
illarion.easygui.parser.talk.consequences.Inform.Docu.syntax=inform("<inform message>")

illarion.easygui.parser.talk.consequences.Inform.Warp.title=Warp character
illarion.easygui.parser.talk.consequences.Inform.Warp.description=This consequence warps the character to the given position.
illarion.easygui.parser.talk.consequences.Inform.Warp.example="Dungeon" -> "So be it, I send you to the dungeon", warp(200,140,-3)
illarion.easygui.parser.talk.consequences.Inform.Warp.syntax=warp(<x>,<y>,<z>)

illarion.easygui.parser.talk.consequences.Introduce.Docu.title=Introduce
illarion.easygui.parser.talk.consequences.Introduce.Docu.description=This consequence causes the NPC to introduce himself to the player. This is only useful in case the auto introduction mode is switched off.
illarion.easygui.parser.talk.consequences.Introduce.Docu.example="Hello" -> "Greetings, I'm John", introduce
illarion.easygui.parser.talk.consequences.Introduce.Docu.syntax=introduce

illarion.easygui.parser.talk.consequences.Item.Docu.title=Create Item
illarion.easygui.parser.talk.consequences.Item.Docu.description=This consequences causes that items are created in the inventory of the player. The quality value uses values between 100 and 999 to determine the quality of the item. The data value is used for special items such as swords improved with magical gems.
illarion.easygui.parser.talk.consequences.Item.Docu.example="Hello" -> "Greetings, I just gave you a pretty good Serinjahsword", item(1, 1, 777, 0)
illarion.easygui.parser.talk.consequences.Item.Docu.syntax=item(<item id>, <amount>, <quality>, <data>)

illarion.easygui.parser.talk.consequences.Money.Docu.title=Money
illarion.easygui.parser.talk.consequences.Money.Docu.description=This consequence gives money to the character talking to the NPC, or takes money from it. This consequence uses all three coin types of the money according to their values.
illarion.easygui.parser.talk.consequences.Money.Docu.example="Hello" -> "Greetings, I just stole 2 silvercoints from you!", money - 2000
illarion.easygui.parser.talk.consequences.Money.Docu.syntax=money <calculation operator> <value>

illarion.easygui.parser.talk.consequences.Queststatus.Docu.title=Queststatus
illarion.easygui.parser.talk.consequences.Queststatus.Docu.description=This consequence is used to alter the queststatus with the set ID. This can be used to store any quest progress caused by the line that was said.
illarion.easygui.parser.talk.consequences.Queststatus.Docu.example="Hello" -> "Greetings, you just advanced in the quest!", queststatus(1) + 1
illarion.easygui.parser.talk.consequences.Queststatus.Docu.syntax=queststatus(<quest id>) <calculation operator> <value>

illarion.easygui.parser.talk.consequences.Rankpoints.Docu.title=Rankpoints
illarion.easygui.parser.talk.consequences.Rankpoints.Docu.description=This consequence changes the rankpoints of the character in the set group. Possible values are Cadomyr, Galmair and Runewick.
illarion.easygui.parser.talk.consequences.Rankpoints.Docu.example="Hello" -> "Hey, your relation to Cadomyr just improved!", rankpoints(Cadomyr) + 1
illarion.easygui.parser.talk.consequences.Rankpoints.Docu.syntax=rankpoints(<group constant>) <calculation operator> <value>

illarion.easygui.parser.talk.consequences.Rune.Docu.title=Rune
illarion.easygui.parser.talk.consequences.Rune.Docu.description=This consequence teaches the character talking to the NPC a rune.
illarion.easygui.parser.talk.consequences.Rune.Docu.example="Hello" -> "Greetings, you just learned the rune KEL", rune(mage,1)
illarion.easygui.parser.talk.consequences.Rune.Docu.syntax=rune(<magic type>, <rune id>)

illarion.easygui.parser.talk.consequences.Skill.Docu.title=Skill
illarion.easygui.parser.talk.consequences.Skill.Docu.description=This consequence is used to change the skill value of one of the characters skills. This changes are permanent, so use it carefully.
illarion.easygui.parser.talk.consequences.Skill.Docu.example="Hello" -> "Greetings, you just learned fishing", skill(fishing) + 1
illarion.easygui.parser.talk.consequences.Skill.Docu.syntax=skill(<skill name>) <calculation operator> <value>

illarion.easygui.parser.talk.consequences.State.Docu.title=NPC state
illarion.easygui.parser.talk.consequences.State.Docu.description=This consequence is used to change the NPC state. Each NPC stores one of those values for each character. This value is not persistent and will be deleted at a server restart. It can be used to track the progress of a conversation.
illarion.easygui.parser.talk.consequences.State.Docu.example="Hello" -> "Hello, now I know that you said hello to me.", state = 1
illarion.easygui.parser.talk.consequences.State.Docu.syntax=state <calculation operator> <value>

illarion.easygui.parser.talk.consequences.Talkstate.Docu.title=Talking state
illarion.easygui.parser.talk.consequences.Talkstate.Docu.description=This consequence is used to change the talking state. The possible values are "begin" in order to start a conversation with this character, or "end" in case to end the conversation.
illarion.easygui.parser.talk.consequences.Talkstate.Docu.example="Hello" -> "Greetings, I will now talk with you!", begin
illarion.easygui.parser.talk.consequences.Talkstate.Docu.syntax=<talking state change constant>

illarion.easygui.parser.talk.consequences.Treasure.Docu.title=Create treasure map
illarion.easygui.parser.talk.consequences.Treasure.Docu.description=This consequence is used to create a treasure map. It possible to set the level of the treasure from 1 to 9. The position where the treasure is found is chosen randomly.
illarion.easygui.parser.talk.consequences.Treasure.Docu.example="Hello" -> "Hello, here you go a map to a awesome large treasure!", treasure(9)
illarion.easygui.parser.talk.consequences.Treasure.Docu.syntax=treasure(<Level of the trasure>)

illarion.easygui.parser.NpcColors.Docu.title=NPC Colors
illarion.easygui.parser.NpcColors.Docu.description=The NPC colors contain the hair and the skin color of the NPC. The NPC will appear in this color in the game. Please use good looking color values here that fit the race of the NPC.

illarion.easygui.parser.NpcColors.Skin.Docu.title=NPC skin color
illarion.easygui.parser.NpcColors.Skin.Docu.description=The skin color of the NPC is how the default gray skin of the NPC is colored in the client. This value should fit a good color value depending on the race of the NPC.
illarion.easygui.parser.NpcColors.Skin.Docu.example=colorSkin = 245, 180, 137
illarion.easygui.parser.NpcColors.Skin.Docu.syntax=colorSkin = <red>, <green>, <blue>

illarion.easygui.parser.NpcColors.Hair.Docu.title=NPC hair color
illarion.easygui.parser.NpcColors.Hair.Docu.description=The hair color of the NPC is how the default gray hair of the NPC is colored in the client. This value should fit a good color value depending on the race of the NPC. The hair color is only of any use in case the NPC has any hair to color.
illarion.easygui.parser.NpcColors.Hair.Docu.example=colorHair = 123, 62, 9
illarion.easygui.parser.NpcColors.Hair.Docu.syntax=colorHair = <red>, <green>, <blue>

illarion.easygui.parser.NpcEquipment.Docu.title=NPC Equipment
illarion.easygui.parser.NpcEquipment.Docu.description=The equipment of the NPC is what the NPC wears. This is needed to ensure that the NPC is not naked. The items set have to be fitting paperdolling items (no trees on the head slot) so they are displayed in the game.

illarion.easygui.parser.NpcEquipment.Docu.Head.title=Equipment slot: head
illarion.easygui.parser.NpcEquipment.Docu.Head.description=This equipment slot contains the item the NPC wears on its head. Hats and helments are useable on this slot.
illarion.easygui.parser.NpcEquipment.Docu.Head.example=itemHead = 7
illarion.easygui.parser.NpcEquipment.Docu.Head.syntax=itemHead = <item id>

illarion.easygui.parser.NpcEquipment.Docu.Chest.title=Equipment slot: chest
illarion.easygui.parser.NpcEquipment.Docu.Chest.description=This equipment slot contains the item the NPC wears on its chest. Armors, shirts and dresses are useable on this slot.
illarion.easygui.parser.NpcEquipment.Docu.Chest.example=itemChest = 4
illarion.easygui.parser.NpcEquipment.Docu.Chest.syntax=itemChest = <item id>

illarion.easygui.parser.NpcEquipment.Docu.Coat.title=Equipment slot: coat
illarion.easygui.parser.NpcEquipment.Docu.Coat.description=This equipment slot contains the item the NPC wears as coat. Coats and capes are useable on this slot.
illarion.easygui.parser.NpcEquipment.Docu.Coat.example=itemCoat = 2377
illarion.easygui.parser.NpcEquipment.Docu.Coat.syntax=itemCoat = <item id>

illarion.easygui.parser.NpcEquipment.Docu.MainHand.title=Equipment slot: main hand
illarion.easygui.parser.NpcEquipment.Docu.MainHand.description=This equipment slot contains the item the NPC wears in his hand. This hand should be used for "main" items such as swords or tools.
illarion.easygui.parser.NpcEquipment.Docu.MainHand.example=itemMainHand = 1
illarion.easygui.parser.NpcEquipment.Docu.MainHand.syntax=itemMainHand = <item id>

illarion.easygui.parser.NpcEquipment.Docu.SecHand.title=Equipment slot: second hand
illarion.easygui.parser.NpcEquipment.Docu.SecHand.description=This equipment slot contains the item the NPC wears in his hand. This hand should be used for "secondary" items such as arrows or shields.
illarion.easygui.parser.NpcEquipment.Docu.SecHand.example=itemSecondHand = 17
illarion.easygui.parser.NpcEquipment.Docu.SecHand.syntax=itemSecondHand = <item id>

illarion.easygui.parser.NpcEquipment.Docu.Hands.title=Equipment slot: hands
illarion.easygui.parser.NpcEquipment.Docu.Hands.description=The equipment slot contains the item the NPC wears on his hands. Gloves and similar items go here.
illarion.easygui.parser.NpcEquipment.Docu.Hands.example=itemHands = 48
illarion.easygui.parser.NpcEquipment.Docu.Hands.syntax=itemHands = <item id>

illarion.easygui.parser.NpcEquipment.Docu.Trousers.title=Equipment slot: trousers
illarion.easygui.parser.NpcEquipment.Docu.Trousers.description=The equipment slot contains the item the NPC wears on his legs. Trousers and grieves go here.
illarion.easygui.parser.NpcEquipment.Docu.Trousers.example=itemTrousers = 34
illarion.easygui.parser.NpcEquipment.Docu.Trousers.syntax=itemTrousers = <item id>

illarion.easygui.parser.NpcEquipment.Docu.Shoes.title=Equipment slot: shoes
illarion.easygui.parser.NpcEquipment.Docu.Shoes.description=The equipment slots contains the item the NPC wears on his legs. Shoes and boots go here.
illarion.easygui.parser.NpcEquipment.Docu.Shoes.example=itemShoes = 53
illarion.easygui.parser.NpcEquipment.Docu.Shoes.syntax=itemShoes = <item id>

illarion.easygui.parser.NpcHair.Docu.title=NPC Hair
illarion.easygui.parser.NpcHair.Docu.description=The NPC hair definition defines the hair of the NPC. The hair will be displayed as paperdolling objects.

illarion.easygui.parser.NpcHair.Docu.Hair.title=Hair
illarion.easygui.parser.NpcHair.Docu.Hair.description=This definition contains the main hair of the NPC. This works for male and female characters. Lizards get a crest on the head with this.
illarion.easygui.parser.NpcHair.Docu.Hair.example=hairID = 1
illarion.easygui.parser.NpcHair.Docu.Hair.syntax=hairID = <hair id>

illarion.easygui.parser.NpcHair.Docu.Beard.title=Beard
illarion.easygui.parser.NpcHair.Docu.Beard.description=This definition contains the beard of the NPC. This works only for male characters. Lizards don't get beards also.
illarion.easygui.parser.NpcHair.Docu.Beard.example=beardID = 1
illarion.easygui.parser.NpcHair.Docu.Beard.syntax=beardID = <beard id>

# Error Messages
illarion.easygui.gui.MainFrame.crashEditor.Title=Critical Error

crash.awt=A error occured while processing the GUI.
crash.default=A massive error occurred in the editor.
crash.fixfailed=Fixing the error wasn't possible.\nThe editor has to exit now.

illarion.common.bug.Title=Error report
illarion.common.bug.details.Intro=The following informations are send to the Illarionserver in case you agree.
illarion.common.bug.details.Application=Application:
illarion.common.bug.details.Version=Version:
illarion.common.bug.details.OS=Operating system:
illarion.common.bug.details.Thread=Thread:
illarion.common.bug.details.Stack=Stack backtrace:
illarion.common.bug.buttons.always=Send always
illarion.common.bug.buttons.once=Send once
illarion.common.bug.buttons.not=Don't send
illarion.common.bug.buttons.never=Never send