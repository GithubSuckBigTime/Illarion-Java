/*
 * This file is part of the Illarion Client.
 *
 * Copyright Â© 2013 - Illarion e.V.
 *
 * The Illarion Client is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Illarion Client is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the Illarion Client.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'java'
apply plugin: 'fatjar'

archivesBaseName = 'illarion_download'

dependencies {
    compile project(':common')
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '2.0.+'
    compile group: 'log4j', name: 'log4j', version: '1.2.+'
    compile group: 'org.eclipse.aether', name: 'aether-impl', version: '0.9.0.M3'
    compile group: 'org.eclipse.aether', name: 'aether-transport-http', version: '0.9.0.M3'
    compile group: 'org.eclipse.aether', name: 'aether-connector-basic', version: '0.9.0.M3'
    compile group: 'org.apache.maven', name: 'maven-aether-provider', version: '3.1.1'

}

build.dependsOn 'fatJar'

fatJar {
    doFirst {
        gitVersion

        manifest {
            attributes    \
               'Implementation-Title': 'Illarion Download Utility',    \
               'Implementation-Version': project.ext.fullVersion,    \
               'Implementation-Vendor': 'Illarion e.V.',    \
               'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ssZ'),    \
               'Built-By': System.getProperty('user.name'),    \
               'Built-JDK': System.getProperty('java.version'),    \
               'Main-Class': 'illarion.download.install.Installation'
        }
    }
    doLast {
        proguard
        postprocessProguard
    }
}

task proguard(type: proguard.gradle.ProGuardTask, dependsOn: 'fatJar') {
    logging.captureStandardOutput LogLevel.INFO
    configuration 'illadownload.pro'
}

task deleteOldFatJar(type: Delete, dependsOn: 'proguard') {
    delete 'build/libs/' + archivesBaseName + '-' + project.version + '.jar'
}

task setupProguardOutput(type: Copy, dependsOn: 'deleteOldFatJar') {
    from 'build/libs/proguard_result.jar'
    into 'build/libs/'
    rename { filename ->
        filename.replace('proguard_result', archivesBaseName + '-' + project.version)
    }
}

task postprocessProguard(type: Delete, dependsOn: 'setupProguardOutput') {
    delete 'build/libs/proguard_result.jar'
}